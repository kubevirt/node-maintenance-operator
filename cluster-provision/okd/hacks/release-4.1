diff --git a/cmd/openshift-install/create.go b/cmd/openshift-install/create.go
index 2e3d442c6..f7c52a3a5 100644
--- a/cmd/openshift-install/create.go
+++ b/cmd/openshift-install/create.go
@@ -238,7 +238,7 @@ func waitForBootstrapComplete(ctx context.Context, config *rest.Config, director
 
 	discovery := client.Discovery()
 
-	apiTimeout := 30 * time.Minute
+	apiTimeout := 120 * time.Minute
 	logrus.Infof("Waiting up to %v for the Kubernetes API at %s...", apiTimeout, config.Host)
 	apiContext, cancel := context.WithTimeout(ctx, apiTimeout)
 	defer cancel()
@@ -279,7 +279,7 @@ func waitForBootstrapComplete(ctx context.Context, config *rest.Config, director
 // and waits for the bootstrap configmap to report that bootstrapping has
 // completed.
 func waitForBootstrapConfigMap(ctx context.Context, client *kubernetes.Clientset) error {
-	timeout := 30 * time.Minute
+	timeout := 120 * time.Minute
 	logrus.Infof("Waiting up to %v for bootstrapping to complete...", timeout)
 
 	waitCtx, cancel := context.WithTimeout(ctx, timeout)
@@ -317,7 +317,7 @@ func waitForBootstrapConfigMap(ctx context.Context, client *kubernetes.Clientset
 // waitForInitializedCluster watches the ClusterVersion waiting for confirmation
 // that the cluster has been initialized.
 func waitForInitializedCluster(ctx context.Context, config *rest.Config) error {
-	timeout := 30 * time.Minute
+	timeout := 120 * time.Minute
 	logrus.Infof("Waiting up to %v for the cluster at %s to initialize...", timeout, config.Host)
 	cc, err := configclient.NewForConfig(config)
 	if err != nil {
diff --git a/data/data/libvirt/main.tf b/data/data/libvirt/main.tf
index 4013ed0ec..cb9be72fa 100644
--- a/data/data/libvirt/main.tf
+++ b/data/data/libvirt/main.tf
@@ -23,6 +23,7 @@ resource "libvirt_volume" "master" {
   count          = "${var.master_count}"
   name           = "${var.cluster_id}-master-${count.index}"
   base_volume_id = "${module.volume.coreos_base_volume_id}"
+  size           = 32212254720
 }
 
 resource "libvirt_ignition" "master" {
@@ -55,6 +56,8 @@ resource "libvirt_network" "net" {
       data.libvirt_network_dns_host_template.masters.*.rendered,
       data.libvirt_network_dns_host_template.masters_int.*.rendered,
       data.libvirt_network_dns_host_template.etcds.*.rendered,
+      data.libvirt_network_dns_host_template.console.*.rendered,
+      data.libvirt_network_dns_host_template.auth.*.rendered,
     ))}"]
   }]
 
@@ -121,6 +124,18 @@ data "libvirt_network_dns_host_template" "etcds" {
   hostname = "etcd-${count.index}.${var.cluster_domain}"
 }
 
+data "libvirt_network_dns_host_template" "auth" {
+  count    = "${var.master_count}"
+  ip       = "${var.libvirt_auth_ip}"
+  hostname = "oauth-openshift.apps.${var.cluster_domain}"
+}
+
+data "libvirt_network_dns_host_template" "console" {
+  count    = "${var.master_count}"
+  ip       = "${var.libvirt_auth_ip}"
+  hostname = "console-openshift-console.apps.${var.cluster_domain}"
+}
+
 data "libvirt_network_dns_srv_template" "etcd_cluster" {
   count    = "${var.master_count}"
   service  = "etcd-server-ssl"
diff --git a/data/data/libvirt/variables-libvirt.tf b/data/data/libvirt/variables-libvirt.tf
index cea25a520..a1e3722fc 100644
--- a/data/data/libvirt/variables-libvirt.tf
+++ b/data/data/libvirt/variables-libvirt.tf
@@ -28,6 +28,11 @@ variable "libvirt_master_ips" {
   description = "the list of desired master ips. Must match master_count"
 }
 
+variable "libvirt_auth_ip" {
+  type        = "string"
+  description = "node with authentication server ip"
+}
+
 # It's definitely recommended to bump this if you can.
 variable "libvirt_master_memory" {
   type        = "string"
diff --git a/pkg/asset/tls/aggregator.go b/pkg/asset/tls/aggregator.go
index 9ec6432da..6dac0b736 100644
--- a/pkg/asset/tls/aggregator.go
+++ b/pkg/asset/tls/aggregator.go
@@ -27,7 +27,7 @@ func (a *AggregatorCA) Generate(dependencies asset.Parents) error {
 	cfg := &CertCfg{
 		Subject:   pkix.Name{CommonName: "aggregator", OrganizationalUnit: []string{"bootkube"}},
 		KeyUsages: x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature | x509.KeyUsageCertSign,
-		Validity:  ValidityOneDay,
+		Validity:  ValidityOneYear,
 		IsCA:      true,
 	}
 
@@ -65,7 +65,7 @@ func (a *APIServerProxyCertKey) Generate(dependencies asset.Parents) error {
 		Subject:      pkix.Name{CommonName: "system:kube-apiserver-proxy", Organization: []string{"kube-master"}},
 		KeyUsages:    x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature,
 		ExtKeyUsages: []x509.ExtKeyUsage{x509.ExtKeyUsageClientAuth},
-		Validity:     ValidityOneDay,
+		Validity:     ValidityOneYear,
 	}
 
 	return a.SignedCertKey.Generate(cfg, aggregatorCA, "apiserver-proxy", DoNotAppendParent)
@@ -93,7 +93,7 @@ func (c *AggregatorSignerCertKey) Generate(parents asset.Parents) error {
 	cfg := &CertCfg{
 		Subject:   pkix.Name{CommonName: "aggregator-signer", OrganizationalUnit: []string{"openshift"}},
 		KeyUsages: x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature | x509.KeyUsageCertSign,
-		Validity:  ValidityOneDay,
+		Validity:  ValidityOneYear,
 		IsCA:      true,
 	}
 
@@ -158,7 +158,7 @@ func (a *AggregatorClientCertKey) Generate(dependencies asset.Parents) error {
 		Subject:      pkix.Name{CommonName: "system:kube-apiserver-proxy", Organization: []string{"kube-master"}},
 		KeyUsages:    x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature,
 		ExtKeyUsages: []x509.ExtKeyUsage{x509.ExtKeyUsageClientAuth},
-		Validity:     ValidityOneDay,
+		Validity:     ValidityOneYear,
 	}
 
 	return a.SignedCertKey.Generate(cfg, ca, "aggregator-client", DoNotAppendParent)
diff --git a/pkg/asset/tls/apiserver.go b/pkg/asset/tls/apiserver.go
index a50bee836..cd63ff13c 100644
--- a/pkg/asset/tls/apiserver.go
+++ b/pkg/asset/tls/apiserver.go
@@ -185,7 +185,7 @@ func (a *KubeAPIServerLocalhostServerCertKey) Generate(dependencies asset.Parent
 		Subject:      pkix.Name{CommonName: "system:kube-apiserver", Organization: []string{"kube-master"}},
 		KeyUsages:    x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature,
 		ExtKeyUsages: []x509.ExtKeyUsage{x509.ExtKeyUsageServerAuth},
-		Validity:     ValidityOneDay,
+		Validity:     ValidityOneYear,
 		DNSNames: []string{
 			"localhost",
 		},
@@ -288,7 +288,7 @@ func (a *KubeAPIServerServiceNetworkServerCertKey) Generate(dependencies asset.P
 		Subject:      pkix.Name{CommonName: "system:kube-apiserver", Organization: []string{"kube-master"}},
 		KeyUsages:    x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature,
 		ExtKeyUsages: []x509.ExtKeyUsage{x509.ExtKeyUsageServerAuth},
-		Validity:     ValidityOneDay,
+		Validity:     ValidityOneYear,
 		DNSNames: []string{
 			"kubernetes", "kubernetes.default",
 			"kubernetes.default.svc",
@@ -392,7 +392,7 @@ func (a *KubeAPIServerExternalLBServerCertKey) Generate(dependencies asset.Paren
 		Subject:      pkix.Name{CommonName: "system:kube-apiserver", Organization: []string{"kube-master"}},
 		KeyUsages:    x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature,
 		ExtKeyUsages: []x509.ExtKeyUsage{x509.ExtKeyUsageServerAuth},
-		Validity:     ValidityOneDay,
+		Validity:     ValidityOneYear,
 		DNSNames: []string{
 			apiAddress(installConfig.Config),
 		},
@@ -431,7 +431,7 @@ func (a *KubeAPIServerInternalLBServerCertKey) Generate(dependencies asset.Paren
 		Subject:      pkix.Name{CommonName: "system:kube-apiserver", Organization: []string{"kube-master"}},
 		KeyUsages:    x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature,
 		ExtKeyUsages: []x509.ExtKeyUsage{x509.ExtKeyUsageServerAuth},
-		Validity:     ValidityOneDay,
+		Validity:     ValidityOneYear,
 		DNSNames: []string{
 			internalAPIAddress(installConfig.Config),
 		},
diff --git a/pkg/asset/tls/kubelet.go b/pkg/asset/tls/kubelet.go
index 01264e898..32cc8059d 100644
--- a/pkg/asset/tls/kubelet.go
+++ b/pkg/asset/tls/kubelet.go
@@ -24,7 +24,7 @@ func (c *KubeletCSRSignerCertKey) Generate(parents asset.Parents) error {
 	cfg := &CertCfg{
 		Subject:   pkix.Name{CommonName: "kubelet-signer", OrganizationalUnit: []string{"openshift"}},
 		KeyUsages: x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature | x509.KeyUsageCertSign,
-		Validity:  ValidityOneDay,
+		Validity:  ValidityOneYear,
 		IsCA:      true,
 	}
 
@@ -181,7 +181,7 @@ func (a *KubeletClientCertKey) Generate(dependencies asset.Parents) error {
 		Subject:      pkix.Name{CommonName: "system:serviceaccount:openshift-machine-config-operator:node-bootstrapper", Organization: []string{"system:serviceaccounts:openshift-machine-config-operator"}},
 		KeyUsages:    x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature,
 		ExtKeyUsages: []x509.ExtKeyUsage{x509.ExtKeyUsageClientAuth},
-		Validity:     ValidityOneDay,
+		Validity:     ValidityOneYear,
 	}
 
 	return a.SignedCertKey.Generate(cfg, ca, "kubelet-client", DoNotAppendParent)
diff --git a/pkg/tfvars/libvirt/libvirt.go b/pkg/tfvars/libvirt/libvirt.go
index dc9710fa1..88603f4f7 100644
--- a/pkg/tfvars/libvirt/libvirt.go
+++ b/pkg/tfvars/libvirt/libvirt.go
@@ -17,6 +17,7 @@ type config struct {
 	IfName      string   `json:"libvirt_network_if"`
 	MasterIPs   []string `json:"libvirt_master_ips,omitempty"`
 	BootstrapIP string   `json:"libvirt_bootstrap_ip,omitempty"`
+	AuthNodeIP  string   `json:"libvirt_auth_ip,omitempty"`
 }
 
 // TFVars generates libvirt-specific Terraform variables.
@@ -42,6 +43,7 @@ func TFVars(masterConfig *v1alpha1.LibvirtMachineProviderConfig, osImage string,
 		IfName:      bridge,
 		BootstrapIP: bootstrapIP.String(),
 		MasterIPs:   masterIPs,
+		AuthNodeIP:  "192.168.126.51",
 	}
 
 	return json.MarshalIndent(cfg, "", "  ")
